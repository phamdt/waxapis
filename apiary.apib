FORMAT: 1A
HOST: http://www.youraccountname.waxlrs.com

# Wax APIs

# Group Badges
## Badges [/TCAPI/_api/badges]
### Badges: Retrieval [GET]
+ Request

    + Headers

            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQZQ

+ Response 200 (application/json)

        {
            "badges": [
                {
                    "name": "A Badge",
                    "id": "07f0eb09-beca-4b49-b5e3-2fe6b9z2f2c3",
                    "type": "competency",
                    "criteria": [
                        {
                           "option": "",
                           "quantity": 1,
                           "activity": "a",
                           "combine": "count",
                           "verb": "a",
                           "name": "A",
                           "completion": true
                        }
                    ],
                    "groupings": {
                        "": [
                           "criteria0"
                        ]
                    },
                    "description": null,
                    "created": "2013-10-13T21:46:39Z",
                    "interval": "anytime",
                    "targets": {
                        "criteria0": 1
                    },
                    "stacks": false,
                    "objectType": "Badge",
                    "descriptions": {
                        "criteria0": "A"
                    }
                },
                {
                    "name": "Badge Number Two",
                    "id": "2b446713-28f3-4dc1-9z19-36db0869ed21",
                    "type": "competency",
                    "criteria": [
                        {
                           "option": "",
                           "quantity": 1,
                           "activity": "http://saltbox.com/tincan/examples/quiz#q3",
                           "combine": "count",
                           "verb": "http://example.org/verbs#answered",
                           "success": true,
                           "name": "Answered Q3"
                        },
                        {
                           "option": "",
                           "quantity": 1,
                           "activity": "http://saltbox.com/tincan/examples/quiz#q2",
                           "combine": "count",
                           "verb": "http://example.org/verbs#answered",
                           "success": true,
                           "name": "Answered Q2"
                        },
                        {
                           "option": "",
                           "completion": true,
                           "name": "Scored over 70%",
                           "minimum": 0.65,
                           "value": "result.score.scaled",
                           "verb": "http://adlnet.gov/expapi/verbs/completed",
                           "combine": "max",
                           "activity": "http://saltbox.com/tincan/examples/quiz",
                           "quantity": 0.7
                        }
                    ],
                    "groupings": {
                        "": [
                           "criteria0",
                           "criteria1",
                           "criteria2"
                        ]
                    },
                    "description": null,
                    "created": "2013-10-15T22:35:22Z",
                    "interval": "monthly",
                    "targets": {
                        "criteria2": 0.7,
                        "criteria1": 1,
                        "criteria0": 1
                    },
                    "stacks": false,
                    "objectType": "Badge",
                    "descriptions": {
                        "criteria2": "Scored over 70%",
                        "criteria1": "Answered Q2",
                        "criteria0": "Answered Q3"
                    }
                }
            ]
        }

### Badges: Create One Badge [POST]
list out all badge options
link to xapi when approp
figure out how to do criteria like parameters

#### Badge Attributes
describe what this is

+ name: Title of your badge. Required. Must be at least one character in length.
+ image: Optional. `image/png` or `image/x-png` file with size less than 256k.
+ description: About your badge. Optional. Defaults to `null`.
Provided descriptions must be at least one character in length.
+ criteria: See criteria list below
+ type: Optional. Defaults to `competency`. Right now this does nothing.
Possible values: `badge` or `competency`.
+ interval: How often one can earn the badge. Optional. Defaults to `anytime`.
Possible values: `anytime`, `yearly`, `monthly`, `daily`.
+ stacks: Whether or not a badge can be earned multiple times. Optional.
Default to `False`.

##### Criteria Attributes
talk about multiple criteria

+ name: A short phrase meaningful in the context of the badge, such as 'viewing the Solution Selling video'. Required.
+ verb: xAPI verb id signifying the action commited on the specified activity which triggers badgeing. Required.
+ activity: xAPI activity id of activity which can trigger badgeing. Required.
+ completion: Boolean noting whether or not completing activity is required.
This corresponds with the `result.completion` property in an xAPI statement.
Optional. Defaults to `any`. Possible values: `any`, `true`, `false`.
+ success: Boolean noting whether or not achieving success is required. Optional. This corresponds with the `result.success` property in an xAPI statement. Possible values: `any`, `true`, `false`.
+ minimum: Minimum scaled score for consideration.
This float value corresponds with the `result.score` property in an xAPI statement.
Optional.
+ maximum: Maximum scaled score for consideration. This float value corresponds with the `result.score` property in an xAPI statement. Optional.
+ quantity: The count, sum, or max must be at least this much to complete the criteria. Optional. Defaults to `1`.
+ combine: Method for tallying statements to meet the needed quantity. Optional. Defaults to `count`. Possible values: `count`, `max`, `sum`.
+ value: Part of the xAPI statement to tally, such as result.score.raw (unneeded when the above 'combine' is set to `count`).



<!-- 
While not technically required, when `combine` is set to `max` or `sum` and `value` is not set, then there will never be a way to trigger the badge; Wax won't know what value to calculate to a max value or sum will never be counted. -->

+ option:


+ Request (application/json)

    + Headers

            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQZQ

    + Body

            {
                "name": "Smore Maker Supreme",
                "criteria": [
                    {
                        "name": "making smores with the right ingredients",
                        "verb": "http://example.com/verbs/created",
                        "activity": "http://example.com/activities/makingsmores",
                        "completion": true,
                        "success": true,
                        "quantity": 10
                    }
                ]
            }

+ Response 200

        {
            "id": "624c86cd-ea13-424a-bbf2-1295e10406de",
            "name": "Smore Maker Supreme",
            "description": null,
            "descriptions": {
                "criteria0": "making smores with the right ingredients"
            },
            "targets": {
                "criteria0": 10.0
            },
            "groupings": {
                "": ["criteria0"]
            },
            "created": "2014-02-21T00:28:13Z",
            "interval": "anytime",
            "objectType": "Badge",
            "criteria": [
                {
                    "completion": true,
                    "name": "making smores with the right ingredients"
                ,
                    "success": true,
                    "verb": "http://example.com/verbs/created",
                    "combine": "count",
                    "option": "",
                    "activity": "http://example.com/activities/makingsmores",
                    "quantity": 10.0
                }
            ],
            "type": "competency",
            "stacks": false
        }

+ Response 400 (application/json)

        {
            "status": "error",
            "errors": [
                {
                    "location": "body",
                    "name": "name",
                    "description": "name is missing"
                },
                {
                    "location": "body",
                    "name": "criteria",
                    "description": "criteria is missing"
                }
            ]
        }

# Group Badge

# Group Agent Badges

# Group Agent Mastery
## Agent Mastery [/TCAPI/_api/agent_mastery{?agent}]
description of what this is

### Agent Mastery: Retrieval [GET]
+ Parameters

    + agent (required, json, `{"mbox": "mailto:agent@example.com"}`) ...
    Agent object as defined in xAPI associated with this state

+ Request

    + Headers

            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQZQ

+ Response 200

        {
            "prediction": 0.55,
            "stdev": 0.25
        }

+ Response 200 (insufficient data)

        {
            "prediction": null,
            "stdev": null,
            "error": "Insufficient score data"
        }

# Group Agent Objects
## Agent Objects [/TCAPI/_api/agents{?agent}]
describe me
how am i different from other agent resource

### Agent Objects: Retrieval [GET]
notes about how you get what you give when no other info is found

+ Parameters

    + agent (required, object, `{"mbox":"mailto:bauer@example.com"}`) ...
         One or more agent objects as defined in xAPI associated with this state.
         To request multiple agents in the query string:
         "agent={"mbox":"mailto:bauer@example.com"}&agent={"mbox":"mailto:almeida@example.com"}"

+ Request

    + Headers

            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQZQ

+ Response 200

        [
            {
                "mbox": "mailto:a28@example.org",
                "name": "Alejandro Argo"
            }
        ]

# Group Summary
## Summary [/TCAPI/_api/summary/{year}/{month}/{*period}]
### Summary Resource Attributes
If at least one statement is found within the provided time frame,
an object with the following structure will be returned:

+ new: Object with properties: verb, statement, actor, activity
    + verb: Total number of new verbs in time period
    + actor: Total number of new actors in time period
    + activity: Total number of new activities in time period
    + statement: Total number of new statements in time period
+ most_active: Object with properties: verb, actor, activity
    + verb: List of lists in which the inner lists contain:
        + An xAPI verb object
        + The number of occurrences for that verb within statements
    + actor: List of lists in which the inner lists contain:
        + An xAPI agent object
        + The number of occurrences for that verb within statements
    + activity: List of lists in which the inner lists contain:
        + An xAPI activity object
        + The number of occurrences for that activity within statements

If the specified time frame does not find any matching statements,
the structure will be as follows:

+ new
    + statement
+ most_active

### Summary: Retrieval [GET]
+ Parameters

    + year (required, number, `2013`) ...
    Retrieved information will have timestamps within this year
    + month (required, number, `9`) ...
    Retrieved information will have timestamps within this month
    + period (optional, numbers, `31/23/59/59`) ...
    Additional numbers that allow you to further narrow down the time period for statements
    (e.g., `{day} / {hour}` or `{day} / {hour} /{minute} / {seconds} / {fraction of a second}`)

+ Request

    + Headers

            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQZQ

+ Response 200

        {
            "new": {
                "verb": 2,
                "statement": 116,
                "actor": 2,
                "activity": 1
            },
            "most_active": {
                "verb": [
                    [
                        {
                            "id": "http://example.org/verbs#answered"
                        },
                        116
                    ],
                    [
                        {
                            "id": "http://adlnet.gov/expapi/verbs/completed"
                        },
                        17
                    ]
                ],
                "actor": [
                    [
                        {
                           "mbox": "mailto:xiao@example.com",
                           "name": "Xiao Xiao"
                        },
                        100
                    ],
                    [
                        {
                           "mbox": "mailto:somebodythatiusedtoknow@example.com",
                           "name": "Jasper Casper"
                        },
                        16
                    ]
                ],
                "activity": [
                    [
                        {
                           "definition": {
                              "name": {
                                 "en-US": "Swallow Lading and Airspeed Examination"
                              }
                           },
                           "id": "http://saltbox.com/tincan/examples/quiz",
                           "objectType": "Activity"
                        },
                        116
                    ]
                ]
            }
        }

# Group Debug Documents [/TCAPI/_api/debug/documents]
## Debug Documents: Retrieval [GET]
talk about and link to the documents api (apiary, xapi)
resource attributes list
talk about what these docs are in this context

+ Request

    + Headers

            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQZQ

+ Response 200

        {
            "documents": {
                "agent_profile": [
                    {
                        "timestamp": "2014-02-18T23:31:08Z",
                        "document_type": "agent_profile",
                        "identifier": "",
                        "agent": {
                         "mbox": "mailto:secret_agent_man@example.com"
                        }
                    },
                    {
                        "timestamp": "2014-02-18T23:30:26Z",
                        "document_type": "agent_profile",
                        "identifier": "e12d6f90-2a3f-4b53-8ce5-d307e4c20f4b",
                        "agent": {
                            "mbox": "mailto:agent_q@example.com"
                        }
                    }
                ],
                "activity_profile": [
                    {
                        "timestamp": "2014-02-18T23:31:05Z",
                        "document_type": "activity_profile",
                        "identifier": "",
                        "activity_id": "urn:a:b"
                    },
                    {
                        "timestamp": "2014-02-18T23:30:24Z",
                        "document_type": "activity_profile",
                        "identifier": "4dd3abfc-29b8-492f-a5e6-e72a7a9500de",
                        "activity_id": "urn:a:b"
                    }
                ],
                "state": [
                    {
                        "timestamp": "2014-02-18T23:31:26Z",
                        "activity_id": "http://example.com/activity",
                        "identifier": "1ee237p23e68114b9705e33912058a78",
                        "agent": {
                            "mbox": "mailto:lightningcatsho@example.com"
                        },
                        "document_type": "state"
                    },
                    {
                        "timestamp": "2014-02-18T23:31:23Z",
                        "activity_id": "http://example.com/activity",
                        "identifier": "94702a52b49341f0b3530a2e6fcd6555",
                        "agent": {
                         "mbox": "mailto:person@.example.com"
                        },
                        "document_type": "state"
                    }
                ]
            }
        }

# Group Debug xAPI [/TCAPI/_api/debug/xapi]
talk about how helpful this is

## Debug API: Retrieval [GET]
discuss resource attributes

+ Request

    + Headers

            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQZQ

+ Response 200

        {
            "messages": [
                {
                    "status": 400,
                    "received": "2014-02-21T18:50:09Z",
                    "parameters": {

                    },
                    "url": "http://youraccount.waxlrs.com/TCAPI/_api/mastery/agent",
                    "explanation": "Missing required parameters:\n                agent",
                    "site": "youraccount",
                    "api": "agent_mastery",
                    "verb": "GET",
                    "id": "fcegb2919b2811e3803f887529182736"
                },
                {
                    "status": 400,
                    "received": "2014-02-21T18:51:12Z",
                    "parameters": {

                    },
                    "url": "http://oneofyoursubaccounts.waxlrs.com/TCAPI/_api/mastery/agent",
                    "explanation": "Missing required parameters:\n                agent",
                    "site": "oneofyoursubaccounts",
                    "api": "agent_mastery",
                    "verb": "GET",
                    "id": "2291b99e9b2911e3a54c93028472812"
                }
            ],
            "iterator": "http://youraccount.waxlrs.com/TCAPI/_api/debug/xapi?iterator=longamazonkinesisiterator&sequence=sequencevalue"
        }
