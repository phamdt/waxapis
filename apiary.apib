FORMAT: 1A
HOST: http://www.youraccountname.waxlrs.com

# Wax APIs
Welcome to Wax API's!

The resources described here are categorized in to three groups:

1. Analyses: Resources meant to provide analysis of the statements submitted
via the core functionality of the Experience API as implemented by WaxLRS.
2. Accounts Management: Resources to create and retrieve information about
subaccounts
3. Debugging: Resources originally intended for internal Saltbox use to debug
recent errors

## Questions?
We hope you find this documentation useful.
For any questions or feedback feel free to use the comments feature found in
each HTTP method or contact us through our
[support page](http://saltbox.uservoice.com/).

## Group General Information
### Authentication
Note that each of the examples below require the usage of basic authorization as
part of the request.

# Group Analyses
## Common Error Responses
`400 Bad Request`
- "{your parameter} is not a legal JSON value, but is required to be":
In addition to checking for typos, make sure this isn't an empty value.

## Activity Popularity [/TCAPI/_api/analyses/activity_popularity{?descending}]
Activity Popularity allows you to determine the most and least popular
activities based on the number of the activity occurences.

### Activity Popularity Attributes
The returned resource is a list of objects with the properties "key", "id", and
"value". "key" is the only important property.

+ key: list of four items:
    + index 0: Total number of statements with the given activity
    + index 1: Total number of unique agents
    + index 2: The activity id
    + index 3: The activity name

### Activity Popularity: Retrieval [GET]

+ Parameters

    + descending (optional, boolean) ... true for most popular and false for
    least popular

+ Request

    + Headers

            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQZQ

+ Response 200

        [
            {
                "key": [
                    1,
                    1,
                    "http://example.com/activity",
                    "Activity!"
                ],
                "id": "LDLmKDwePnetZy-vR-WaMZ",
                "value": null
            },
            {
                "key": [
                    1,
                    1,
                    "http://example.com/activity",
                    "Activity!"
                ],
                "id": "Ma6ShA3P86EY9qlYN__qnZ",
                "value": null
            }
        ]

## Basic Results [/TCAPI/_api/analyses/basic_results{?activity}]
In order to store information about measured outcomes, the optional
["result" property](https://github.com/adlnet/xAPI-Spec/blob/master/xAPI.md#result)
is provided as part of an xAPI statement. While the value of this property
refers to one particular result for an agent, Basic Results provides all results
for a particular activity which is further organized by agent.

### Notes
Even though the xAPI standard has a "response" property within the "result"
property of an xAPI statement, we exclude it here and instead provide responses
separately in its own resource as seen below.

This resource provides information
to the "Results Summary" in the WaxLRS interface.

### Basic Results Attributes
This resource returns a list of objects with the following properties:

+ key: list with the following items
    + index 0: agent
+ value: object with the following optional properties
    + scaled: list of scaled scores
    + raw: list of raw scores
    + completion: list of booleans indicating completion of activity
    + success: list of booleans indicating success in activity

### Basic Results: Retrieval [GET]

+ Parameters

    + activity (required, string, `http://example.com/activity/scoring`) ...
    xAPI activity id

+ Request

    + Headers

            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQZQ

+ Response 200

        [
            {
                "key": [{"mbox": "thisactivitywashard@example.com"}],
                "value": {
                    "completion": true,
                    "success": false
                }
            },
            {
                "key": [{"mbox": "irockedthis@example.com"}],
                "value": {
                    "completion": true,
                    "success": true
                }
            },
        ]

## Question Analysis [/TCAPI/_api/analyses/questionanalysis{?activity}]
Question Analysis analyzes the quality of questions and determines if they are
conducive to the success of an assessment.

### Question Analysis Attributes
This resource returns a list of objects with the following properties:

+ key: a list with the following items:
    + index 0: the activity id
    + index 1: the activity display
+ value: a list of the following items
    + index 0
    + index 1
    + index 2
    + index 3
    + index 4

### Question Analysis: Retrieval [GET]

+ Parameters

    + activity (required, string, `http://example.com/activity/scoring`) ...
    xAPI activity id

+ Request

    + Headers

            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQZQ

+ Response 200

        [
            {
                "key": [
                    "http://mylms.example.com/courses/sellingxyz#0",
                    "What commitment objective would you set for this call?"
                ],
                "value": [
                    6.306691373577208,
                    10,
                    4.5186298820169934,
                    10,
                    6.9725856602075895
                ]
            },
            {
                "key": [
                    "http://mylms.example.com/courses/sellingxyz#1",
                    "Was this person a decision maker?"
                ],
                "value": [
                    9.265942360824935,
                    14,
                    1.559378894769265,
                    6,
                    6.9725856602075895
                ]
            }
        ]


## Responses [/TCAPI/_api/analyses/responses{?activity}]
The "response" property is an optional property within the
["result" property](https://github.com/adlnet/xAPI-Spec/blob/master/xAPI.md#result)
which allows for arbitrary text appropriate to the activity to be recorded.
One example is a free response to an open ended survey question. The resource
provides information to the "Response Tabulation" in the WaxLRS interface.

### Responses Attributes
This resource returns a list of response objects with the following properties:

+ key: list of two items
    + index 0: agent
    + index 1: the timestamp of the response
+ value: the actual response text

### Responses: Retrieval [GET]

+ Parameters

    + activity (required, string, `http://example.com/activity/scoring`) ...
    xAPI activity id

+ Request

    + Headers

            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQZQ

+ Response 200

        [
            {
                "key": [
                    {"mbox": "iLoveBlueBooks@example.com"},
                    "2013-05-18T05:32:34.804Z"
                ],
                "value": "this is what i decided to write as my response"
            },
            {
                "key": [
                    {"mbox": "iHateBlueBooks@example.com"},
                    "2013-06-18T05:32:34.804Z"
                ],
                "value": "ah! writer's block!"
            },
        ]

## Scorechart [/TCAPI/_api/analyses/scorechart{?activity}]
Like other referrences to 'score', scores correspond to the
[result.score property](https://github.com/adlnet/xAPI-Spec/blob/master/xAPI.md#result)
statement property. This resource provides a distribution of all scores for a
given activity. As expected, this Scorechart resource provides information to
the "Scorechart" report in the WaxLRS interface.

### Scorechart Attributes
This resource returns an object with the following properties:

+ raw: object with raw scores and their total occurrences as key value pairs
+ scaled: object with scaled scores and their total occurrences as key value
pairs

### Scorechart: Retrieval [GET]

+ Parameters

    + activity (required, string, `http://example.com/activity/scoring`) ...
    xAPI activity id

+ Request

    + Headers

            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQZQ

+ Response 200

        {
          "raw": {},
          "scaled": {
            "0.3185880953164357": 1,
            "0.12008526250184093": 1,
            "0.9296901591327735": 1,
            "0.8510739693969134": 1
          }
        }

## Timeline [/TCAPI/_api/analyses/timeline{?activity,agent,verb}]
The Timeline resource provides a way to find the number of occurrences for an
activity during various time frames.

### Timeline Attributes
The resource returns a list of objects with the following properties:

+ key: a list in which each item corresponds to part of a single date
    + index 0: the year
    + index 1: the month
    + index 2: the day
+ value: the number of occurrences of this activity during the specified
time frame

### Timeline: Retrieval [GET]
#### Notes
Only one of the parameters below can be used.

+ Parameters

    + activity (optional, string, `http://example.com/activity/scoring`) ...
    xAPI activity id
    + agent (optional, json) ... xAPI agent object
    + verb (optional, string, `urn:verb:completed`) ... xAPI verb id

+ Parameters

    + activity (required, string, `http://example.com/activity/scoring`) ...
    xAPI activity id

+ Request

    + Headers

            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQZQ

+ Response 200

        [
            {
                "key": [
                    2012,
                    9,
                    12
                ],
                "value": 200
            },
            {
                "key": [
                    2013,
                    4,
                    22
                ],
                "value": 100
            }
        ]

## Verb Cloud [/TCAPI/_api/analyses/verbcloud{?activity,agent}]
The Verb Cloud provides the total number of occurrences of verbs for the given
activity or agent.

### Verb Cloud Attributes
This resource provides a list of objects with the following properties:

+ key: a list with one value, the verb id
+ value: an object with the following properties:
    + display: the verb's display property
    + total: the total number of the verb's occurrences

### Verb Cloud: Retrieval [GET]
#### Notes
Only one of the parameters below can be used.

+ Parameters

    + activity (optional, string, `http://example.com/activity/scoring`) ...
    xAPI activity id
    + agent (optional, json) ... xAPI agent object

+ Request

    + Headers

            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQZQ

+ Response 200

        [
            {
                "key": [
                    "urn:verb:completed"
                ],
                "value": {
                    "display": {},
                    "total": 2935
                }
            }
        ]

# Group Agent Mastery
## Agent Mastery [/TCAPI/_api/agent_mastery{?agent}]
???????????????
'Mastery' refers to the Saltbox Mastery Index (SMI) which summarizes an
individual's overall performance relative to peers. For example, an SMI score of 35%
indicates that the individual performed better than approximately 35% of the
individual's peers included in evaluation. Performance, in this case, refers to
achievement in scorable activities as found in the `result.score` property
of statements.

### Agent Mastery Attributes
This resource returns an object with the following properties:

+ prediction: This is the SMI score formatted in decimals
+ stdev: The standard deviation
+ error: The error text if an error is present

### Agent Mastery: Retrieval [GET]

+ Parameters

    + agent (required, json, `{"mbox": "mailto:agent@example.com"}`) ...
    Agent object, as defined in xAPI, associated with this state

+ Request

    + Headers

            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQZQ

+ Response 200

        {
            "prediction": 0.55,
            "stdev": 0.25
        }

+ Response 200 (insufficient data)

        {
            "prediction": null,
            "stdev": null,
            "error": "Insufficient score data"
        }

# Group Agent Objects
## Agent Objects [/TCAPI/_api/agents{?agent}]
This resource returns a list of full xAPI agents where 'full' means that an
agent has the 'name' property if a name was ever associated (via statements)
with the agent's inverse functional identifier (mbox, mbox_sha1sum, openid,
account). This means that even if 99 statements were sent with the same agent
but with no name, even if one statement was sent with the same identifier and
with a name, this resource will be able to retrieve that name.

### TCAPI/_api/agents vs. TCAPI/agents
This resource, `TCAPI/_api/agents`, is different from our `TCAPI/agents`
resource which returns a list of Agent objects (regardless of being empty or
not) as opposed to being restricted to a single Person object. Among the
reasons you might use this resource is to retrieve the corresponding name for a
a list of agents when the only information you have is each agent's mbox
(email). #better example?

### Notes
Assuming properly formed parameters, this resource will, in the very least,
return what you provide. For example, if you provide the agent parameter,
`{"mbox":"mailto:nonexistent@example.org"}`, even when this agent doesn't exist
in WaxLRS the response would still be:

        [
            {
                "mbox": "mailto:nonexistent@example.org"
            }
        ]

A likely scenario in which this behavior is useful would involve using the
returned resource to compare agent information against external data or simply
seeing which agents have names associated.

For example, depending on how you submit statements, it is certainly possible
that agents in the system do not have names since the `name` property is
optional. However, if you consistently use the convention of including names,
the returned list of unnamed agents is one possible indicator of who has been
involved in any learning activity.

Another example might involve combining the available information about agents
in WaxLRS with information from a separate data source in which it is important
to have as much information available about each agent between the two services.
Having a returned list of the same length (with the same agents), could be
easier to use.

### Agent Objects: Retrieval [GET]

+ Parameters

    + agent (required, object, `{"mbox":"mailto:bauer@example.com"}`) ...
         One or more agent objects, as defined by xAPI, associated with this state.
         To request multiple agents in the query string:
         "agent={"mbox":"mailto:bauer@example.com"}&agent={"mbox":"mailto:almeida@example.com"}"

+ Request

    + Headers

            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQZQ

+ Response 200

        [
            {
                "mbox": "mailto:bauer@example.com",
                "name": "Bauer Pauer"
            }
        ]

# Group Summary
## Summary [/TCAPI/_api/summary/{year}/{month}/{*period}]
The Summary resource is a helpful tool to find high-level information about
actors, verbs, activities, and statements within a specified time frame.

#### Notes
If at least one statement is found within the provided time frame,
an object with the following structure will be returned:

#### Summary Attributes
This resource returns an object with the following properties:

+ new: Object with properties: verb, statement, actor, activity
    + verb: Total number of new verbs in time frame
    + actor: Total number of new actors in time frame
    + activity: Total number of new activities in time frame
    + statement: Total number of new statements in time frame
+ most_active: Object with properties: verb, actor, activity
    + verb: List of lists in which the inner lists contain:
        + An xAPI verb object
        + The number of occurrences for that verb within statements
    + actor: List of lists in which the inner lists contain:
        + An xAPI agent object
        + The number of occurrences for that verb within statements
    + activity: List of lists in which the inner lists contain:
        + An xAPI activity object
        + The number of occurrences for that activity within statements

If the specified time frame does not find any matching statements, the structure
will be as seen as it is displayed in the`Response 200 (no statements)` example
below.

### Summary: Retrieval [GET]
+ Parameters

    + year (required, number, `2013`) ...
    Retrieved information will have timestamps within this year
    + month (required, number, `9`) ...
    Retrieved information will have timestamps within this month
    + period (optional, numbers, `31/23/59/59`) ...
    Additional numbers that allow you to further narrow down the time frame for
    statements
    (e.g., `{day} / {hour}` or `{day} / {hour} /{minute} / {seconds})

+ Request

    + Headers

            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQZQ

+ Response 200

        {
            "new": {
                "verb": 2,
                "statement": 116,
                "actor": 2,
                "activity": 1
            },
            "most_active": {
                "verb": [
                    [
                        {
                            "id": "http://example.org/verbs#answered"
                        },
                        116
                    ],
                    [
                        {
                            "id": "http://adlnet.gov/expapi/verbs/completed"
                        },
                        17
                    ]
                ],
                "actor": [
                    [
                        {
                           "mbox": "mailto:xiao@example.com",
                           "name": "Xiao Xiao"
                        },
                        100
                    ],
                    [
                        {
                           "mbox": "mailto:somebodythatiusedtoknow@example.com",
                           "name": "Jasper Casper"
                        },
                        16
                    ]
                ],
                "activity": [
                    [
                        {
                           "definition": {
                              "name": {
                                 "en-US": "Swallow Lading and Airspeed Examination"
                              }
                           },
                           "id": "http://saltbox.com/tincan/examples/quiz",
                           "objectType": "Activity"
                        },
                        116
                    ]
                ]
            }
        }

+ Response 200 (no statements)

        {
            "new" {
                "statement": 0
            },
            "most_active": {}
        }


# Group Accounts Management
The resources below are part of our Accounts Management API which allow for
creating and retrieving information about subaccounts. Subaccounts can help you
segment your data in a way that corresponds to your organization. For example,
company, 'A', may have 32 departments. Company 'A' can have one WaxLRS account
and then create 32 subaccounts, one for each department. All billing related
processes and information are handled through the main account.

## Subaccounts
### Description of Usual Server Responses

`200 OK`

+ A successful request: you were able to retrieve subaccounts or
create a new one

`400 Bad Request`

+ The request could not be understood or was missing required
information
+ "An email is required to request a password reset link but was not provided"
+ "Malformed reset token", this may have resulted from copy and pasting the
password reset link incorrectly

`403 Forbidden`

+ This is most likely because the reset password token is
expired
+ "Expired reset token"

`404 Not Found`

+ make sure you wrote out the endpoint/link correctly,
otherwise you may be requesting a subaccount that does not exist
+ "Subaccount, {subaccountsitename}, does not exist."
+ "Only letters and numbers are allowed", this message occurs when creating a
subaccount with an invalid site name

`409 Conflict`

+ You are attempting to create a subaccount with a site name
that already exists
+ "That name is already in use"

### Subaccounts [/TCAPI/_api/accounts/subaccounts]
### Retrieve subaccounts [GET]
Retrieve list of all subaccounts with information for site name, url, basic
credentials url, and OAuth credentials url

+ Request
    + Headers

            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQZQ

+ Response 200 (application/json)

        [
            {
                "site": "yearnin4elearnin",
                "url": "https://yearnin4elearnin.waxlrs.com",
                "basic_credentials": "https://elearningorg.waxlrs.com/TCAPI/_api/accounts/subaccounts/yearnin4elearnin/credentials/basic",
                "oauth_credentials": "https://elearningorg.waxlrs.com/TCAPI/_api/accounts/subaccounts/yearnin4elearnin/credentials/oauth"
            },
            {
                "site": "readersareleaders",
                "url": "https://readersareleaders.waxlrs.com",
                "basic_credentials": "https://elearningorg.waxlrs.com/TCAPI/_api/accounts/subaccounts/readersareleaders/credentials/basic",
                "oauth_credentials": "http://elearningorg.waxlrs.com/TCAPI/_api/accounts/subaccounts/readersareleaders/credentials/oauth"
            }
        ]


### Create new subaccount [POST]
Create new subaccount by posting your desired subaccount name and corresponding
email

+ Request (application/json)
    + Headers

            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQZQ

    + Body

            {
                "site": "yearnin4elearnin",
                "email": "iHearteLearnin143@example.com"
            }


+ Response 200 (application/json)

        {
            "site": "yearnin4elearnin",
            "url": "http://yearnin4elearnin.waxlrs.com",
            "basic_credentials": "http://elearningorg.waxlrs.com/TCAPI/_api/accounts/subaccounts/yearnin4elearnin/credentials/basic",
            "oauth_credentials": "http://elearningorg.waxlrs.com/TCAPI/_api/accounts/subaccounts/yearnin4elearnin/credentials/oauth"
        }

## Subaccount [/TCAPI/_api/accounts/subaccounts/{subaccountsitename}]
### Retrieve subaccount [GET]
Retrieve one subaccount with information for site name, url, basic credentials
url, and OAuth credentials url

+ Parameters

    +   subaccountsitename (required, string, `yearnin4elearnin`) ...
    name of subaccount

+ Request

    + Headers

            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQZQ

+ Response 200 (application/json)

        {
            "site": "yearnin4elearnin",
            "url": "http://yearnin4elearnin.waxlrs.com",
            "basic_credentials": "http://elearningorg.waxlrs.com/TCAPI/_api/accounts/subaccounts/yearnin4elearnin/credentials/basic",
            "oauth_credentials": "http://elearningorg.waxlrs.com/TCAPI/_api/accounts/subaccounts/yearnin4elearnin/credentials/oauth"
        }

## Basic Credentials [/TCAPI/_api/accounts/subaccounts/{subaccountsitename}/credentials/basic]
### Retrieve basic credentials [GET]
Retrieve all basic credentials for specified subaccount

+ Request

    + Headers

            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQZQ

+ Response 200 (application/json)

        {
            "basic_credentials": [
                {
                    "login": "oTSjEY4rnCqQ9JwkIy03",
                    "password": "vGq7DZViN0CwbXMiGMqT",
                    "created": "2013-09-23T20:41:44.316602Z"
                },
                {
                    "login": "akcqNUKKOMzG8WwaZISv",
                    "password": "oyBnq2urPEh0EF5QzJZ8",
                    "created": "2013-09-25T20:41:12.205101Z"
                }
            ]
        }

### Generate basic credential [POST]
Generate basic credential for specified subaccount

+ Request
    + Headers

            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQZQ

+ Response 200 (application/json)

        {
            "login": "oTSjEY4rnCqQ9JwkIy03",
            "password": "vGq7DZViN0CwbXMiGMqT",
            "created": "2013-09-23T20:41:44.316602Z"
        }

## OAuth Credentials [/TCAPI/_api/accounts/subaccounts/{subaccountsitename}/credentials/oauth]
### Retrieve OAuth credentials [GET]
Retrieve all OAuth credentials for specified subaccount

+ Request
    + Headers

            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQZQ

+ Response 200 (application/json)

        {
            "oauth_credentials": [
                {
                    "consumer_key": "WGQ17ukZHstLfNo1HwXT",
                    "secret_key": "iSe4BOHtByYWXyuZWxFx",
                    "created": "2013-09-23T20:41:44.316602Z"
                },
                {
                    "consumer_key": "9gMaMUrwEeWCLEwwcYCm",
                    "secret_key": "KSRNCMZ6QUKLuJlpjyge",
                    "created": "2013-09-23T20:43:09.311111Z"
                }
            ]
        }


### Generate OAuth credential [POST]
Generate OAuth credential for specified subaccount

+ Request
    + Headers

            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQZQ

+ Response 200 (application/json)

        {
            "consumer_key": "WGQ17ukZHstLfNo1HwXT", "secret_key": "iSe4BOHtByYWXyuZWxFx", "created": "2013-09-23T20:41:44.316602Z"
        }

## Site Admins [/TCAPI/_api/accounts/subaccounts/{subaccountsitename}/reset_password?email={email}]
When a subaccount user has lost or forgotten their password, this request can be
used to generate a reset password link. Each link is unique to the email that is
sent as a parameter in the request. Upon visiting this link, a user can enter a
new password into the browser. The reset password link expires after 24 hours.

This endpoint can also be used to create a user for the subaccount. Upon using
this endpoint, if Wax does not recognize the email as part of the subaccount's
associated list of users, a new user account will be created.

### Generate Reset Password Link [POST]
Generate reset password link for specified subaccount

+ Parameters

    + email (required, string, `xAPI4Life@example.com`) ... email of user who
    needs a user account generated or who has forgotten/lost password

+ Request

    + Headers

            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQZQ


+ Response 200 (application/json)

        {
            "reset_link": "https://yearnin4elearnin.waxlrs.com/reset?token=WyJleGFtcGxlIiwiYmF0ZmxlY2tAZXhhbXBsZS5jb20iXQ.BSJvDg.WJzyeRFbOTjkr37j6W2a8lSRisE"
        }

# Group Debugging
The Debugging APIs were originally intended for internal use by Saltbox but are
not restricted to Saltbox.

## Debug Documents [/TCAPI/_api/debug/documents]
Debug documents are the most recent (within 24 hours) documents stored by the
[Document APIs](http://docs.waxtcapi.apiary.io/#documentapis). This is useful
because the Document APIs cannot retrieve documents by timestamp alone. For
example, the
[Agent Profile API](https://github.com/adlnet/xAPI-Spec/blob/master/xAPI.md#agentprofapi)
requires an agent parameter when retrieving any
documents and then optionally the `since` parameter can be included. As such,
the debug documents provide the quickest access to recently stored documents.
This in turn allows you to perform any debugging related to documents if needed.

In the example below, one of the agent_profile documents has the id set to
"e12d6f90-2a3f-4b53-8ce5-d307e4c20f4b". Using this id and its corresponding
agent as parameters, you can use the
[Agent Profile API](https://github.com/adlnet/xAPI-Spec/blob/master/xAPI.md#agentprofapi)
to retrieve the specific document.

### Debug Document Attributes
As seen in this resource's response, this resource returns an object with the
single "documents" property. Within this property's value, you can find a list
of all the documents that fall under the three different document types: agent
profile, activity profile, and state during the last 24 hours.

### Debug Documents: Retrieval [GET]

+ Request

    + Headers

            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQZQ

+ Response 200

        {
            "documents": {
                "agent_profile": [
                    {
                        "timestamp": "2014-02-18T23:31:08Z",
                        "document_type": "agent_profile",
                        "identifier": "",
                        "agent": {
                            "mbox": "mailto:secret_agent_man@example.com"
                        }
                    },
                    {
                        "timestamp": "2014-02-18T23:30:26Z",
                        "document_type": "agent_profile",
                        "identifier": "e12d6f90-2a3f-4b53-8ce5-d307e4c20f4b",
                        "agent": {
                            "mbox": "mailto:agent_q@example.com"
                        }
                    }
                ],
                "activity_profile": [
                    {
                        "timestamp": "2014-02-18T23:31:05Z",
                        "document_type": "activity_profile",
                        "identifier": "",
                        "activity_id": "urn:a:b"
                    },
                    {
                        "timestamp": "2014-02-18T23:30:24Z",
                        "document_type": "activity_profile",
                        "identifier": "4dd3abfc-29b8-492f-a5e6-e72a7a9500de",
                        "activity_id": "urn:a:b"
                    }
                ],
                "state": [
                    {
                        "timestamp": "2014-02-18T23:31:26Z",
                        "activity_id": "http://example.com/activity",
                        "identifier": "1ee237p23e68114b9705e33912058a78",
                        "agent": {
                            "mbox": "mailto:lightningcatsho@example.com"
                        },
                        "document_type": "state"
                    },
                    {
                        "timestamp": "2014-02-18T23:31:23Z",
                        "activity_id": "http://example.com/activity",
                        "identifier": "94702a52b49341f0b3530a2e6fcd6555",
                        "agent": {
                            "mbox": "mailto:person@example.com"
                        },
                        "document_type": "state"
                    }
                ]
            }
        }

## Debug xAPI [/TCAPI/_api/debug/xapi{?iterator,sequence}]
The Debug xAPI API allows you to retrieve the most recent (within 24 hours)
errors related to the various xAPI APIs (Statement and Document APIs).

### Debug xAPI Attributes

+ messages
    + status: the HTTP responsen code
    + received: timestamp of when the error occurred
    + parameters: an object of parameters sent as part of the request to the API
    + url: the API endpoint
    + explanation: The error message displayed to the API user, which is
    different than what is logged to Saltbox logging services
    + site: the site/account name of the person using this API
    + api: the name of the API being examined
    + verb: the HTTP verb
    + id: ?
+ iterator: The Amazon Kinesis iterator that iterates the stream of errors

### Notes
While this API can take the `iterator` and `sequence` parameters as described
below. These typically will not be needed and are set by Amazon.

## Debug xAPI: Retrieval [GET]

+ Parameters

    + iterator (optional, string) ... Kinesis Iterator found by GET-ing this
    resource without parameters
    + sequence (optional, string) ... Sequence value found as a query parameter
    in the returned iterator url

+ Request

    + Headers

            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQZQ

+ Response 200

        {
            "messages": [
                {
                    "status": 400,
                    "received": "2014-02-21T18:50:09Z",
                    "parameters": {

                    },
                    "url": "http://youraccount.waxlrs.com/TCAPI/_api/mastery/agent",
                    "explanation": "Missing required parameters:n                agent",
                    "site": "youraccount",
                    "api": "agent_mastery",
                    "verb": "GET",
                    "id": "fcegb2919b2811e3803f887529182736"
                },
                {
                    "status": 400,
                    "received": "2014-02-21T18:51:12Z",
                    "parameters": {

                    },
                    "url": "http://oneofyoursubaccounts.waxlrs.com/TCAPI/_api/mastery/agent",
                    "explanation": "Missing required parameters:n                agent",
                    "site": "oneofyoursubaccounts",
                    "api": "agent_mastery",
                    "verb": "GET",
                    "id": "2291b99e9b2911e3a54c93028472812"
                }
            ],
            "iterator": "http://youraccount.waxlrs.com/TCAPI/_api/debug/xapi?iterator=longamazonkinesisiterator&sequence=sequencevalue"
        }
